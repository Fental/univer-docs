---
interface Props {
  position: 'left' | 'right'
  cover?: string
  prefix?: any
  title: any
  sub?: string
  desc: string | string[]
}

const { position, cover, prefix, title, sub, desc } = Astro.props
---

<section
  class="horizontal-content grid gap-y-4 md:gap-y-0 md:gap-x-24"
  class:list={[position]}
>
  <div class="cover w-full md:w-120 lg:w-140 xl:w-180 mx-auto md:mx-0">
    {cover && (
      <img src={cover} alt={title} />
    )}
    <slot />
  </div>

  <header
    class="flex flex-col self-end justify-center gap-4"
    class:list={[
      sub ? 'h-32' : 'h-20'
    ]}
  >
    <h2 class="flex items-center gap-4 text-8/12 xl:text-12/18 font-700 text-#35322b mx-auto md:mx-0">
      {prefix && (<Astro.props.prefix />)}
      {title}
    </h2>
    {sub && (
      <strong class="text-6/10 text-#35322b text-center md:text-left">{sub}</strong>
    )}
  </header>

  <p
    class="mt-4 text-#999999 flex flex-col gap-4"
    class:list={[
      { 'text-5/8': typeof desc === 'string' }
    ]}
  >
    {typeof desc === 'string' ? desc : desc.map(item => (
      <span
        class="before:content-[''] before:block before:w-2 before:h-2 before:bg-current before:rounded-full flex items-center gap-4">
        {item}
      </span>
    ))}
  </p>
</section>

<style lang="less">
.horizontal-content {
  &.left {
    grid-template-areas:
      "header"
      "cover"
      "desc";
  }
  &.right {
    grid-template-areas:
      "header"
      "cover"
      "desc";
  }

  @media (min-width: 768px) {
    &.left {
      grid-template-areas:
        "cover header"
        "cover desc";
    }
    &.right {
      grid-template-areas:
        "header cover"
        "desc cover";
    }
  }

  .cover {
    grid-area: cover;
  }

  header {
    grid-area: header;
  }

  p {
    grid-area: desc;
  }
}
</style>
